{
  "name": "@diegosogari/cola",
  "version": "0.1.1",
  "description": "JavaScript Node-API port of the Adaptagrams project",
  "keywords": [
    "graph",
    "layout"
  ],
  "homepage": "https://github.com/diegosogari/cola#readme",
  "bugs": {
    "url": "https://github.com/diegosogari/cola/issues"
  },
  "license": "LGPL-2.1-only",
  "author": "Diego Sogari",
  "files": [
    "dist"
  ],
  "type": "module",
  "main": "./dist/index.js",
  "types": "./dist/index.d.ts",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/diegosogari/cola.git"
  },
  "dependencies": {
    "@emnapi/node-binding": "^0.45.0",
    "@emnapi/runtime": "^0.45.0"
  },
  "devDependencies": {
    "@types/node": "^20.11.5",
    "@typescript-eslint/eslint-plugin": "^6.19.0",
    "cmake-js": "^7.3.0",
    "emnapi": "^0.45.0",
    "eslint": "^8.56.0",
    "husky": "^8.0.0",
    "lint-staged": "^15.2.0",
    "node-addon-api": "^7.1.0",
    "node-api-headers": "^1.1.0",
    "prettier": "^3.2.4",
    "typescript": "^5.3.3",
    "vitest": "^1.2.1"
  },
  "engines": {
    "node": ">=16.15.0",
    "npm": ">=8"
  },
  "binary": {
    "napi_versions": [
      9
    ]
  },
  "prettier": {
    "printWidth": 100
  },
  "eslintConfig": {
    "root": true,
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "project": [
        "./tsconfig.json"
      ]
    },
    "plugins": [
      "@typescript-eslint"
    ],
    "ignorePatterns": [
      "**/*.spec.ts"
    ]
  },
  "lint-staged": {
    "lib/*.ts": [
      "eslint --cache",
      "prettier --write"
    ]
  },
  "scripts": {
    "prepublishOnly": "git submodule foreach '`git restore .`' && npm version patch",
    "postinstall": "husky install && git submodule update --init && cd deps/emsdk && ./emsdk install latest && ./emsdk activate latest",
    "test": "vitest run --dir lib",
    "help": "cat usage.txt",
    "build": "npm run swig:build && npm run cola:build && npm run bind:build",
    "swig:diff": "git -C deps/swig diff -p > swig.patch",
    "swig:patch": "git -C deps/swig restore . && git -C deps/swig clean -f && git -C deps/swig apply ../../swig.patch",
    "swig:reconf": "autoreconf -ivf -I Tools/config deps/swig",
    "swig:config": "mkdir -p build-swig && cd build-swig && ../deps/swig/configure --disable-ccache --without-alllang --with-javascript",
    "swig:make": "make -C build-swig",
    "swig:check": "echo '{}' > build-swig/Examples/test-suite/javascript/package.json && make -C build-swig check",
    "swig:clean": "make -C build-swig clean",
    "swig:build": "npm run swig:patch && npm run swig:reconf && npm run swig:config && npm run swig:make",
    "cola:diff": "git -C deps/adaptagrams diff -p > cola.patch",
    "cola:patch": "git -C deps/adaptagrams restore . && git -C deps/adaptagrams clean -f && git -C deps/adaptagrams apply ../../cola.patch",
    "cola:reconf": "mkdir -p deps/adaptagrams/cola/m4 && autoreconf -ivf deps/adaptagrams/cola",
    "cola:config": "mkdir -p build-cola && cd build-cola && ac_cv_exeext=.cjs ../deps/emsdk/upstream/emscripten/emconfigure ../deps/adaptagrams/cola/configure --disable-dialect --disable-shared",
    "cola:make": "./deps/emsdk/upstream/emscripten/emmake make -C build-cola CPPFLAGS='-I.. -fwasm-exceptions'",
    "cola:check": "for dir in build-cola/*/tests; do mkdir -p \"${dir}/output\"; done && ./deps/emsdk/upstream/emscripten/emmake make -C build-cola check CPPFLAGS='-I../.. -fwasm-exceptions' LDFLAGS='-fwasm-exceptions -sNODERAWFS -sALLOW_MEMORY_GROWTH' LOG_COMPILER=node LOG_FLAGS=--trace-uncaught",
    "cola:clean": "./deps/emsdk/upstream/emscripten/emmake make -C build-cola clean",
    "cola:build": "npm run cola:patch && npm run cola:reconf && npm run cola:config && npm run cola:make",
    "bind:generate": "./build-swig/preinst-swig -javascript -typescript -napi -c++ -DSWIGJS -DNDEBUG -outdir dist -o src/cola.cc src/cola.i",
    "bind:config": "cmake-js configure -O build-bind -m $(echo `./deps/emsdk/upstream/emscripten/emcmake echo 2>/dev/null` | sed 's/-D/--CD/g')",
    "bind:make": "./deps/emsdk/upstream/emscripten/emmake make -C build-bind && cp -f build-bind/binding.* dist",
    "bind:clean": "./deps/emsdk/upstream/emscripten/emmake make -C build-bind clean",
    "bind:build": "npm run bind:generate && npm run bind:config && npm run bind:make"
  }
}
